<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="rashkov.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="rashkov.github.io/" rel="alternate" type="text/html" /><updated>2018-07-01T04:10:39-04:00</updated><id>rashkov.github.io/</id><title type="html">Rashkov’s Notebook</title><subtitle>Notes on programming, linux, and ancient text editors</subtitle><entry><title type="html">Why Linux Is Amazing</title><link href="rashkov.github.io/2018/07/01/why-linux-is-amazing.html" rel="alternate" type="text/html" title="Why Linux Is Amazing" /><published>2018-07-01T00:00:00-04:00</published><updated>2018-07-01T00:00:00-04:00</updated><id>rashkov.github.io/2018/07/01/why-linux-is-amazing</id><content type="html" xml:base="rashkov.github.io/2018/07/01/why-linux-is-amazing.html">&lt;p&gt;I think this terminal log demonstrates why I love Linux so much [1].&lt;/p&gt;

&lt;p&gt;I really enjoy the “manual-ness” of Linux, in the same way that driving stick-shift gives you finer control of the vehicle, or the way that riding a fixed gear bicycle gives you a feel for how your bike is making contact with the road. I was on my work laptop, and my screen was too bright. It’s late at night and I want to shift it towards a yellow tint. Remove the blue lights and your sleep will be better, they say.&lt;/p&gt;

&lt;p&gt;Two commands! That’s all it took to accomplish the task.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pacman -S redshift
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This installs the open source program, redshift. Go ahead, feast your eyes on its magnificent code: https://github.com/jonls/redshift
It’s a wonderful program which lets you control the tint of your screen.&lt;/p&gt;

&lt;p&gt;The second command sets the screen to something akin to candle light, or a color temperature of 3400K. That brings me to my next command, in which I specified that exact color temperature:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;redshift -o 3400&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Wonderful! My screen was now at a perfect color temperature for coding in the evening.&lt;/p&gt;

&lt;p&gt;Except… the screen is too bright.&lt;/p&gt;

&lt;p&gt;I need to invoke the xbacklight command. It adjusts my screen brightness.&lt;/p&gt;

&lt;p&gt;I use i3 as a window manager, which means that I had to manually add these to the configuration:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight -inc 2
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This binds my keyboard’s backlight buttons, so that they issue commands to the xbacklight utility and either increase or decrease the backlight by 2%.&lt;/p&gt;

&lt;p&gt;At this point I wouldn’t blame you for saying to yourself, “What a pain in the ass. Who bothers to map their keyboard keys to their favorite screen brightness utility?”&lt;/p&gt;

&lt;p&gt;But I say to you, this is a most beautiful way to meld with your operating system. Linux can be a wonderfully sparse toolset, and a blank canvas on which to develop your aesthetics.&lt;/p&gt;

&lt;p&gt;If this piqued your interest and you’d like to discuss it further, please get at me via twitter @mrashkovsky or email (same handle, @gmail.com).&lt;/p&gt;

&lt;p&gt;[1] ```
mike@haifa [02:36:50 AM] [~] 
-&amp;gt; % sudo pacman -S redshift       &lt;br /&gt;
[sudo] password for mike: 
warning: redshift-1.12-1 is up to date – reinstallin
resolving dependencies…
looking for conflicting packages…&lt;/p&gt;

&lt;p&gt;Packages (1) redshift-1.12-1&lt;/p&gt;

&lt;p&gt;Total Installed Size:  0.83 MiB
Net Upgrade Size:      0.00 MiB&lt;/p&gt;

&lt;p&gt;:: Proceed with installation? [Y/n] Y
(1/1) checking keys in keyring                     [#
(1/1) checking package integrity                   [#
(1/1) loading package files                        [#
(1/1) checking for file conflicts                  [#
(1/1) checking available disk space                [#
:: Processing package changes…
(1/1) reinstalling redshift                        [#
:: Running post-transaction hooks…
(1/3) Updating icon theme caches…
(2/3) Arming ConditionNeedsUpdate…
(3/3) Updating the desktop file MIME type cache…
mike@haifa [02:37:12 AM] [~] 
-&amp;gt; % redshift -O 3400
Using method &lt;code class=&quot;highlighter-rouge&quot;&gt;randr'.
mike@haifa [03:22:31 AM] [~] 
-&amp;gt; % 
mike@haifa [03:22:34 AM] [~] 
-&amp;gt; % xbacklight -set 5  
mike@haifa [03:22:43 AM] [~] 
-&amp;gt; % xbacklight -set 5  
mike@haifa [03:22:47 AM] [~] 
-&amp;gt; % xbacklight -set 15 
mike@haifa [03:22:51 AM] [~] 
-&amp;gt; %
&lt;/code&gt;``&lt;/p&gt;</content><author><name></name></author></entry><entry><title type="html">…in which our protagonist discovers the great power of ES6 block-scoped variables</title><link href="rashkov.github.io/2017/11/16/block-scoping-for-javascript-loops.html" rel="alternate" type="text/html" title="...in which our protagonist discovers the great power of ES6 block-scoped variables" /><published>2017-11-16T15:24:35-05:00</published><updated>2017-11-16T15:24:35-05:00</updated><id>rashkov.github.io/2017/11/16/block-scoping-for-javascript-loops</id><content type="html" xml:base="rashkov.github.io/2017/11/16/block-scoping-for-javascript-loops.html">&lt;p&gt;The quirks of running console.log from within a Javascript for-loop was one of the first, horrifying discoveries that I made as a newly minted javascript developer. I quickly stopped using for-loops anywhere in my code and switched to underscore/lodash’s looping constructs.&lt;/p&gt;

&lt;p&gt;Now with ES6 block scoping, for-loops are safe to use again! Let’s have a look:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// A simple async function that resolves immediately&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;asyncFn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handlers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handlers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Lack of default block scoping can be confusing. Especially with for loops&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Say, someone might start with this:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;asyncFn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Prints all 10s&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Then when they realize why this doesn't work, try something like:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this is inside the block, so it's scoped to it, right?&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;asyncFn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Prints all 9s&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Turns out that for loops don't actually create block scoping,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// even though they use curly braces&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Have to create scope/closure using&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// an immediately-invoked-function-expression (IIFE)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;asyncFn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*  Can achieve the same thing using
 *  the fancy new (ES6) block-scoped
 *  let declaration
 */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;asyncFn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author></entry></feed>